cargo-features = ["edition2024"]

[package]
name = "transmutation"
version = "0.1.0"
edition = "2024"
authors = ["HiveLLM Team <team@hivellm.org>"]
license = "MIT"
description = "High-performance document conversion engine for AI/LLM embeddings"
repository = "https://github.com/hivellm/transmutation"
homepage = "https://hivellm.org/transmutation"
documentation = "https://docs.rs/transmutation"
keywords = ["document", "conversion", "pdf", "llm", "embedding"]
categories = ["parser-implementations", "text-processing", "multimedia"]
readme = "README.md"
rust-version = "1.85"

[lib]
name = "transmutation"
path = "src/lib.rs"

[[bin]]
name = "transmutation"
path = "src/bin/transmutation.rs"
required-features = ["cli"]

[dependencies]
# Async runtime
tokio = { version = "1.47", features = ["full"] }
async-trait = "0.1"
futures = "0.3"

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# File I/O and path handling
walkdir = "2.5"
tempfile = "3.20"
mime = "0.3"
mime_guess = "2.0"

# Hashing and crypto
sha2 = "0.10"
blake3 = "1.5"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = { version = "0.30", optional = true }

# File type detection
file-format = "0.26"

# NOTE: We are NOT integrating with Docling - we are building a pure Rust competitor
# The docling repository is for reference only, not as a dependency

# OCR (Tesseract)
tesseract = { version = "0.15", optional = true }
leptess = { version = "0.14", optional = true }

# Image processing
image = { version = "0.25", features = ["png", "jpeg", "gif", "bmp", "tiff", "webp"] }
imageproc = "0.25"

# Document parsing
# PDF
lopdf = { version = "0.35", optional = true }
pdf-extract = { version = "0.7", optional = true }

# DOCX
docx-rs = { version = "0.4", optional = true }

# XLSX
# calamine = { version = "0.26", optional = true }  # Temporarily disabled due to zip version conflict
umya-spreadsheet = { version = "2.3", optional = true }

# HTML/XML
scraper = { version = "0.21", optional = true }
html5ever = { version = "0.29", optional = true }
quick-xml = { version = "0.37", optional = true }
roxmltree = { version = "0.21", optional = true }

# Markdown
pulldown-cmark = "0.13"
comrak = "0.29"

# Audio/Video
ffmpeg-next = { version = "8.0", optional = true }

# Archives
zip = { version = "6.0", optional = true }
tar = { version = "0.4", optional = true }
flate2 = { version = "1.0", optional = true }
sevenz-rust = { version = "0.6", optional = true }

# Parallelism
rayon = "1.10"
num_cpus = "1.16"

# Caching
redis = { version = "0.28", features = ["tokio-comp", "connection-manager"], optional = true }
rusqlite = { version = "0.33", features = ["bundled"], optional = true }

# HTTP client (for external services)
reqwest = { version = "0.12", features = ["json", "stream"], optional = true }

# CLI dependencies
clap = { version = "4.5", features = ["derive", "cargo", "env"], optional = true }
indicatif = { version = "0.17", optional = true }
console = { version = "0.15", optional = true }
colored = { version = "2.2", optional = true }

# Metrics
prometheus = { version = "0.14", optional = true }

[dev-dependencies]
criterion = { version = "0.6", features = ["async_tokio", "html_reports"] }
pretty_assertions = "1.4"
proptest = "1.6"
tempfile = "3.20"
mockall = "0.13"
tokio-test = "0.4"

[features]
default = ["pdf", "office", "web", "image-ocr"]

# Core engines (pure Rust implementations)
tesseract = ["dep:tesseract", "dep:leptess"]
ffmpeg = ["ffmpeg-next"]

# Format support (pure Rust implementations)
pdf = ["lopdf", "pdf-extract"]
office = ["docx-rs", "umya-spreadsheet"]  # calamine temporarily disabled
web = ["scraper", "html5ever", "quick-xml", "roxmltree"]
image-ocr = ["tesseract"]
audio = ["ffmpeg"]  # Pure Rust audio transcription (no Python/Whisper dependency)
video = ["ffmpeg"]
archives = ["zip", "tar", "flate2", "sevenz-rust"]

# Caching backends
cache-redis = ["redis"]
cache-sqlite = ["rusqlite"]
cache = ["cache-redis", "cache-sqlite"]

# Integrations
vectorizer = ["reqwest"]
observability = ["tracing-opentelemetry", "prometheus"]

# CLI
cli = ["clap", "indicatif", "console", "colored"]

# All features
full = [
    "tesseract",
    "ffmpeg",
    "pdf",
    "office",
    "web",
    "image-ocr",
    "audio",
    "video",
    "archives",
    "cache",
    "vectorizer",
    "observability",
    "cli",
]

[[bench]]
name = "conversion_benchmarks"
harness = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.bench]
opt-level = 3
lto = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

